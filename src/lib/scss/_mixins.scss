@mixin breakpoint($breakpoint, $type: min) {
  $value: $breakpoint;

  @if map-has-key($breakpoints, $breakpoint) {
    $value: map-get($breakpoints, $breakpoint);
  } @else if type-of($breakpoint) == string {
    @error "Breakpoint '#{$breakpoint}' not found in map.";
  }

  @if $type == max {
    $value: $value - 1px;
  }

  @media (#{$type}-width: $value) {
    @content;
  }
}

@mixin safari() {
	@media not all and (min-resolution: 0.001dpcm) {
		@supports (-webkit-appearance: none) {
			@content;
		}
	}
}

@mixin styled-scrollbar($scrollbar-width: thin) {
  scrollbar-width: $scrollbar-width;
  scrollbar-color: lighten($bg-base, 10%) $bg-base;

	&::-webkit-scrollbar {
		@if $scrollbar-width == thin {
			width: 0.75rem;
		} @else {
			width: 1rem;
		}
  }

  &::-webkit-scrollbar-track {
    background: $bg-dark;
  }

  &::-webkit-scrollbar-thumb {
    background: lighten($bg-base, 10%);
    border: 2px solid $bg-dark;

    &:hover {
      background: $bg-light;
    }

    &:active {
      background: lighten($bg-light, 10%);
    }
  }
}

@mixin reset-button() {
  appearance: none;
  background: transparent;
  border: 0;
  margin: 0;
  padding: 0;
  color: $white;
  cursor: pointer;
}

@mixin focus-visible-outline() {
  outline-offset: 0;

  &:focus-visible {
    outline: 3px solid $white;

    &:not(:active) {
      outline-offset: 3px;
    }

    @content;

    @media (prefers-reduced-motion: no-preference) {
      transition: outline-offset 150ms;
    }
  }
}
